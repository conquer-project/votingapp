name: Reusable Build & Push Docker

on:
  workflow_call:
    inputs:
      image-name: 
        description: Name of de Image
        required: false
        type: string
      context:
        description: Docker context (path) to start build from
        required: false
        type: string
      # tag:
      #   description: Use docker-metadata action to create tags # https://github.com/marketplace/actions/docker-metadata-action#tags-input
      #   required: false
      #   type: string
      #   default: |
      aws-region:
        description: AWS Region to use on registry
        required: false
        type: string
        default: eu-north-1
      role-to-assume:
        description: Role to assume
        required: false
        type: string
      push:
        description: Push image to registry
        required: false
        type: boolean
        default: true
      platforms:
        description: Platforms to build for
        required: false
        type: string
        default: linux/amd64 
      aws-ecr-repo:
        description: ECR Repository name
        required: false
        type: string
        default: dev-conquer-ecr-repo

permissions:
  id-token: write
  contents: read
  packages: write 
  pull-requests: write 

jobs:
  build-image:
    name: Build and Push
    runs-on: ubuntu-latest
    
    steps:
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.0.0
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ inputs.role-to-assume }}
          aws-region: ${{ inputs.aws-region }}
      - 
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - 
        name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.aws-ecr-repo }}
          ECR_CONTEXT: ${{ inputs.context }}
          IMAGE_TAG: ${{ inputs.image-name }}-latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
